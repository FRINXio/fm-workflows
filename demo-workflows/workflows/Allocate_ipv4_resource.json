{
    "name": "Allocate_ipv4_resource",
    "description": "{\"description\": \"Claim IPv4 resource\", \"labels\": [\"RESOURCE_MANAGER\"]}",
    "workflowStatusListenerEnabled": true,
    "version": 1,
    "tasks": [
      {
        "name": "RESOURCE_MANAGER_query_pool_by_tag",
        "taskReferenceName": "query_pool_by_tag",
        "type": "SIMPLE",
        "inputParameters": {
            "poolTag": "${workflow.input.pool_name}"
        }
      },
      {
        "label": "decision",
        "name": "decisionTask",
        "taskReferenceName": "pool_exists",
        "inputParameters": {
          "pool_exists": "${query_pool_by_tag.output.response_body.data.SearchPoolsByTags}"
        },
        "type": "DECISION",
        "caseExpression": "$.pool_exists.length > 0 ? 'True' : 'False'",
        "decisionCases": {
          "False": [
            {
              "name": "terminate",
              "taskReferenceName": "terminate_cleanup_pool",
              "inputParameters": {
                "terminationStatus": "FAILED",
                "workflowOutput": {
                  "status": "Pool with name \"${workflow.input.pool_name}\" do not exists."
                }
              },
              "type": "TERMINATE",
              "startDelay": 0,
              "optional": false
            }
          ]
        },
        "defaultCase": [],
        "startDelay": 0,
        "optional": false
      },
      {
        "label": "decision",
        "name": "decisionTask",
        "taskReferenceName": "desired_value_not_null",
        "inputParameters": {
        "desiredValue": "${workflow.input.desired_value}"
        },
        "type": "DECISION",
        "caseExpression": "$.desiredValue.length > 0 ? 'True' : 'False'",
        "decisionCases": {
        "True": [
            {
                "name": "RESOURCE_MANAGER_claim_resource",
                "taskReferenceName": "claim_resource_with_desired_value",
                "type": "SIMPLE",
                "inputParameters": {
                "poolId": "${query_pool_by_tag.output.response_body.data.SearchPoolsByTags[0].id}",
                "userInput": {"desiredValue": "${workflow.input.desired_value}"},
                "description": "${workflow.input.description}",
                "alternativeId": "${workflow.input.alternative_id}"
                }
            }
        ],
        "False": [
            {
                "name": "RESOURCE_MANAGER_claim_resource",
                "taskReferenceName": "claim_resource_without_desired_value",
                "type": "SIMPLE",
                "inputParameters": {
                "poolId": "${query_pool_by_tag.output.response_body.data.SearchPoolsByTags[0].id}",
                "description": "${workflow.input.description}",
                "alternativeId": "${workflow.input.alternative_id}"
                }
            }
        ]
        }
      },
      {
        "name": "LAMBDA_TASK",
        "taskReferenceName": "lambda_claimCustomerAddress",
        "inputParameters": {
          "lambdaValue": "${claim_resource_with_desired_value.output.response_body}",
          "lambdaValue2": "${claim_resource_without_desired_value.output.response_body}",
          "scriptExpression": "if ($.lambdaValue)\n\treturn $.lambdaValue\nelse\nreturn $.lambdaValue2;"
       },
       "type": "LAMBDA",
        "decisionCases": {},
        "defaultCase": [],
        "forkTasks": [],
        "startDelay": 0,
        "joinOn": [],
        "optional": false,
        "defaultExclusiveJoinTask": [],
        "asyncComplete": false,
        "loopOver": []
      }
    ],
    "inputParameters": [
        "{\"pool_name\":{\"value\":\"\",\"description\":\"Pool name [MANDATORY]\",\"type\":\"string\"}, \"description\":{\"value\":\"\",\"description\":\"Description for resource [OPTIONAL]\",\"type\":\"string\"}, \"alternative_id\": {\"value\": \"\", \"description\":\"Alternative ID for resource [OPTIONAL] e.g. {'status':'active'}\", \"type\":\"string\"}, \"desired_value\":{\"value\":\"\",\"description\":\"[OPTIONAL] e.g. If pool address is 192.168.0.1 with prefix 24 my address should be between 192.168.0.0 and 192.168.0.255\",\"type\":\"string\"}}"
    ],
    "outputParameters": {
      "response_body": "${lambda_claimCustomerAddress.output.result.ClaimResource.Properties}"
    },
    "schemaVersion": 2
  }